# commented args represent values filled out
# by train task at run time. To build a functional
# standalone config, add these in

model:
  arch:
    class_path: train.architectures.Autoencoder
    init_args:
      hidden_channels: [8, 16, 32, 64]
  loss:
    class_path: train.metrics.PsdRatio
    init_args:
      fftlength: 2
      asd: true
  metric:
    class_path: train.metrics.OnlinePsdRatio
    init_args:
      filter_pad: 0.5
      edge_pad: 0.25
  patience: 20
data:
  # loading args
  # fname:
  channels: [
    K1:CAL-CS_PROC_DARM_STRAIN_DBL_DQ
    ]
  clean_duration: 8192
  clean_stride: 0.0625
  # inference_sampling_rate: 64
  # start_offset: 0

  # preprocessing args
  batch_size: 32 #512
  kernel_length: 8
  filt_order: 8
  freq_low: [55]
  freq_high: [65]
  window: hanning
  pad_mode: median
optimizer:
  lr: 0.512
lr_scheduler:
  pct_start: 0.33
trainer:
  # by default, use a local CSV logger.
  # Options in train task for using a
  # wandb logger instead
  logger:
    - class_path: lightning.pytorch.loggers.CSVLogger
      init_args:
        # save_dir:
        flush_logs_every_n_steps: 10
  # devices:
  # strategy: set to ddp if len(devices) > 1
  # don't get much of a boost from MP training right
  # now because our convolutions aren't really large enough
  # precision: 16-mixed
  accelerator: auto
  max_epochs: 50 # 100
  check_val_every_n_epoch: 1
  log_every_n_steps: 20
  benchmark: true
